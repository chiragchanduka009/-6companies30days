class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) {
        
        for(int i=0; i<9; i++){
            unordered_map<int, int> horz;
            unordered_map<int, int> vert;
            for(int j=0; j<9; j++){
                if(board[i][j] != '.') horz[board[i][j]]++;
                if(board[j][i] != '.') vert[board[j][i]]++;
                if(horz[board[i][j]] > 1 || vert[board[j][i]] > 1){
                    return false;
                }
            }
        }

        for(int row=0; row<3; row++){
            for(int col=0; col<3; col++){
                unordered_map<int, int> middle;
                for(int i=0; i<3; i++){
                    for(int j=0; j<3; j++){
                        char ch = board[row*3 + i][col*3 +j];
                        if(ch != '.') middle[ch]++;
                        if(middle[ch] > 1) return false;
                    }
                }
            }
        }

        return true;
    }
};
