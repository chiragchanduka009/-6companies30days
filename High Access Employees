class Solution {
public:
    vector<string> findHighAccessEmployees(vector<vector<string>>& access_times) {
        vector<string> res;
        unordered_map<string, int> count;
        unordered_map<string, vector<int>> refer;
        for(int i=0; i<access_times.size(); i++){
            count[access_times[i][0]]++;
            refer[access_times[i][0]].push_back(stoi(access_times[i][1]));
        }

        for(auto &[x,lst] : refer){
            sort(lst.begin(), lst.end());
            int k = lst.size();
            bool flag = false;
            for(int i=0; i+3<=k; i++){
                flag |= lst[i+2] < lst[i]+100;
            }
            if(flag) res.push_back(x);
        }

        return res;
    }
};
